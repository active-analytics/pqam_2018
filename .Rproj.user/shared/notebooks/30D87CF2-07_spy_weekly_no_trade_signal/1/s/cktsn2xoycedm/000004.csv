"0","# calculating the volatility premium"
"0","df_vol_premium <- "
"0","    df_chain_desc %>% "
"0","        select(expiration, execution) %>% "
"0","        left_join("
"0","            df_chain_hist"
"0","            , by = c(""expiration"", ""execution""=""trade_date"")"
"0","        ) %>% "
"0","        select(expiration, execution, bid_swap_rate, garch_forecast) %>% "
"0","        mutate("
"0","            vol_prem = bid_swap_rate - garch_forecast"
"0","        )"
"0","# in-sample first year mean"
"0","dbl_first_year_avg <- "
"0","    df_vol_premium %>%  "
"0","        filter(expiration < ""2015-01-01"") %>% "
"0","        .$vol_prem %>% "
"0","        mean()"
"0","# in-sample first year standard deviation"
"0","dbl_first_year_sd <- "
"0","    df_vol_premium %>%  "
"0","    filter(expiration < ""2015-01-01"") %>% "
"0","    .$vol_prem %>% "
"0","    sd()"
"0","# calculating z-score of volatility premium forecast"
"0","df_vol_premium$z_score <- NA_real_"
"0","df_vol_premium$garch_sell <- NA_real_"
"0","for (ix_exp in 1:nrow(df_vol_premium)){"
"0","    dt_expiration <- df_vol_premium$expiration[ix_exp]"
"0","    dbl_vol_prem <-  df_vol_premium$vol_prem[ix_exp]"
"0","        "
"0","    if (dt_expiration < ""2015-01-01""){"
"0","        # for the first year, just use the in-sample number"
"0","        dbl_vol_prem_mean <- dbl_first_year_avg"
"0","        dbl_vol_prem_sd <- dbl_first_year_sd"
"0","    } else {"
"0","        # after the first year, us a trailing one year calc"
"0","        dbl_vol_prem_mean <- "
"0","            df_vol_premium[(ix_exp - 51):ix_exp, ]$vol_prem %>% mean()"
"0","        dbl_vol_prem_sd <- "
"0","            df_vol_premium[(ix_exp - 51):ix_exp, ]$vol_prem %>% sd()"
"0","    }"
"0","    "
"0","    # calculatin z-score of vol premium forecast"
"0","    dbl_z_score = (dbl_vol_prem - dbl_vol_prem_mean) / dbl_vol_prem_sd"
"0","    df_vol_premium$z_score[ix_exp] <- dbl_z_score"
"0","    "
"0","    "
"0","    bln_sell <- TRUE"
"0","    if (dbl_z_score < - 1.5) {"
"0","        bln_sell <- FALSE"
"0","    }"
"0","    df_vol_premium$garch_sell[ix_exp] <- bln_sell"
"0","    "
"0","}"
"0","# isolating pnl for strangle onsle onley"
"0","df_strangle_pnl <-"
"0","    df_managed_pnl %>% "
"0","    filter(strategy == ""strangle"")"
"0","# joining in the volatility premium forcasting"
"0","df_strangle_pnl <- "
"0","    df_strangle_pnl %>% "
"0","    left_join("
"0","        df_vol_premium %>% select(expiration, garch_sell)"
"0","        , by = ""expiration"""
"0","    ) "
"0","# calculating the pnl accoutng for the garch_based sell signals"
"0","df_strangle_pnl <- "
"0","    df_strangle_pnl %>% "
"0","    mutate("
"0","        garch_pnl = scaled_managed_pnl * garch_sell"
"0","    )"
"0","# calculating the daily pnls "
"0","df_garch_daily <- "
"0","    df_strangle_pnl %>% "
"0","    group_by(data_date) %>% "
"0","    summarize("
"0","        dly_pnl = sum(scaled_managed_pnl)"
"0","        , dly_pnl_garch = sum(garch_pnl)"
"0","    ) %>% "
"0","    mutate("
"0","        ttd_pnl = cumsum(dly_pnl)"
"0","        , ttd_pnl_garch = cumsum(dly_pnl_garch)"
"0","    )"
"0","# gathering a dataframe for easy comparison using group_bys"
"0","df_garch_comparison <- "
"0","    df_garch_daily %>% "
"0","    select(data_date, daily = dly_pnl, ttd = ttd_pnl) %>% "
"0","    mutate(signal = ""base"") %>% "
"0","    bind_rows("
"0","        df_garch_daily %>% "
"0","            select(data_date, daily = dly_pnl_garch, ttd = ttd_pnl_garch) %>% "
"0","            mutate(signal = ""forecast"")"
"0","    )"
"0","# calculating performance by year"
"0","df_garch_by_year <- "
"0","    df_garch_comparison %>% "
"0","    mutate(year = year(data_date)) %>% "
"0","    group_by(signal, year) %>% "
"0","    summarize("
"0","        pnl = sum(daily)"
"0","        , sharpe = (mean(daily) / sd(daily)) * sqrt(252)"
"0","    )"
